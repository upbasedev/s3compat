(function() {var implementors = {};
implementors["s3"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"s3/creds/struct.Credentials.html\" title=\"struct s3::creds::Credentials\">Credentials</a>","synthetic":true,"types":["s3::creds::Credentials"]},{"text":"impl Freeze for <a class=\"struct\" href=\"s3/creds/struct.AssumeRoleWithWebIdentityResponse.html\" title=\"struct s3::creds::AssumeRoleWithWebIdentityResponse\">AssumeRoleWithWebIdentityResponse</a>","synthetic":true,"types":["s3::creds::AssumeRoleWithWebIdentityResponse"]},{"text":"impl Freeze for <a class=\"struct\" href=\"s3/creds/struct.AssumeRoleWithWebIdentityResult.html\" title=\"struct s3::creds::AssumeRoleWithWebIdentityResult\">AssumeRoleWithWebIdentityResult</a>","synthetic":true,"types":["s3::creds::AssumeRoleWithWebIdentityResult"]},{"text":"impl Freeze for <a class=\"struct\" href=\"s3/creds/struct.StsResponseCredentials.html\" title=\"struct s3::creds::StsResponseCredentials\">StsResponseCredentials</a>","synthetic":true,"types":["s3::creds::StsResponseCredentials"]},{"text":"impl Freeze for <a class=\"struct\" href=\"s3/creds/struct.AssumedRoleUser.html\" title=\"struct s3::creds::AssumedRoleUser\">AssumedRoleUser</a>","synthetic":true,"types":["s3::creds::AssumedRoleUser"]},{"text":"impl Freeze for <a class=\"struct\" href=\"s3/creds/struct.ResponseMetadata.html\" title=\"struct s3::creds::ResponseMetadata\">ResponseMetadata</a>","synthetic":true,"types":["s3::creds::ResponseMetadata"]},{"text":"impl Freeze for <a class=\"enum\" href=\"s3/region/enum.Region.html\" title=\"enum s3::region::Region\">Region</a>","synthetic":true,"types":["s3::region::Region"]},{"text":"impl Freeze for <a class=\"struct\" href=\"s3/bucket/struct.Tag.html\" title=\"struct s3::bucket::Tag\">Tag</a>","synthetic":true,"types":["s3::bucket::Tag"]},{"text":"impl Freeze for <a class=\"struct\" href=\"s3/bucket/struct.Bucket.html\" title=\"struct s3::bucket::Bucket\">Bucket</a>","synthetic":true,"types":["s3::bucket::Bucket"]},{"text":"impl Freeze for <a class=\"struct\" href=\"s3/bucket_ops/struct.BucketConfiguration.html\" title=\"struct s3::bucket_ops::BucketConfiguration\">BucketConfiguration</a>","synthetic":true,"types":["s3::bucket_ops::BucketConfiguration"]},{"text":"impl Freeze for <a class=\"struct\" href=\"s3/bucket_ops/struct.CreateBucketResponse.html\" title=\"struct s3::bucket_ops::CreateBucketResponse\">CreateBucketResponse</a>","synthetic":true,"types":["s3::bucket_ops::CreateBucketResponse"]},{"text":"impl Freeze for <a class=\"enum\" href=\"s3/command/enum.HttpMethod.html\" title=\"enum s3::command::HttpMethod\">HttpMethod</a>","synthetic":true,"types":["s3::command::HttpMethod"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"s3/command/struct.Multipart.html\" title=\"struct s3::command::Multipart\">Multipart</a>&lt;'a&gt;","synthetic":true,"types":["s3::command::Multipart"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"enum\" href=\"s3/command/enum.Command.html\" title=\"enum s3::command::Command\">Command</a>&lt;'a&gt;","synthetic":true,"types":["s3::command::Command"]},{"text":"impl Freeze for <a class=\"struct\" href=\"s3/serde_types/struct.InitiateMultipartUploadResponse.html\" title=\"struct s3::serde_types::InitiateMultipartUploadResponse\">InitiateMultipartUploadResponse</a>","synthetic":true,"types":["s3::serde_types::InitiateMultipartUploadResponse"]},{"text":"impl Freeze for <a class=\"struct\" href=\"s3/serde_types/struct.Owner.html\" title=\"struct s3::serde_types::Owner\">Owner</a>","synthetic":true,"types":["s3::serde_types::Owner"]},{"text":"impl Freeze for <a class=\"struct\" href=\"s3/serde_types/struct.Object.html\" title=\"struct s3::serde_types::Object\">Object</a>","synthetic":true,"types":["s3::serde_types::Object"]},{"text":"impl Freeze for <a class=\"struct\" href=\"s3/serde_types/struct.MultipartUpload.html\" title=\"struct s3::serde_types::MultipartUpload\">MultipartUpload</a>","synthetic":true,"types":["s3::serde_types::MultipartUpload"]},{"text":"impl Freeze for <a class=\"struct\" href=\"s3/serde_types/struct.CompleteMultipartUploadData.html\" title=\"struct s3::serde_types::CompleteMultipartUploadData\">CompleteMultipartUploadData</a>","synthetic":true,"types":["s3::serde_types::CompleteMultipartUploadData"]},{"text":"impl Freeze for <a class=\"struct\" href=\"s3/serde_types/struct.Part.html\" title=\"struct s3::serde_types::Part\">Part</a>","synthetic":true,"types":["s3::serde_types::Part"]},{"text":"impl Freeze for <a class=\"struct\" href=\"s3/serde_types/struct.BucketLocationResult.html\" title=\"struct s3::serde_types::BucketLocationResult\">BucketLocationResult</a>","synthetic":true,"types":["s3::serde_types::BucketLocationResult"]},{"text":"impl Freeze for <a class=\"struct\" href=\"s3/serde_types/struct.ListBucketResult.html\" title=\"struct s3::serde_types::ListBucketResult\">ListBucketResult</a>","synthetic":true,"types":["s3::serde_types::ListBucketResult"]},{"text":"impl Freeze for <a class=\"struct\" href=\"s3/serde_types/struct.ListMultipartUploadsResult.html\" title=\"struct s3::serde_types::ListMultipartUploadsResult\">ListMultipartUploadsResult</a>","synthetic":true,"types":["s3::serde_types::ListMultipartUploadsResult"]},{"text":"impl Freeze for <a class=\"struct\" href=\"s3/serde_types/struct.CommonPrefix.html\" title=\"struct s3::serde_types::CommonPrefix\">CommonPrefix</a>","synthetic":true,"types":["s3::serde_types::CommonPrefix"]},{"text":"impl Freeze for <a class=\"struct\" href=\"s3/serde_types/struct.HeadObjectResult.html\" title=\"struct s3::serde_types::HeadObjectResult\">HeadObjectResult</a>","synthetic":true,"types":["s3::serde_types::HeadObjectResult"]},{"text":"impl Freeze for <a class=\"struct\" href=\"s3/serde_types/struct.AwsError.html\" title=\"struct s3::serde_types::AwsError\">AwsError</a>","synthetic":true,"types":["s3::serde_types::AwsError"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"s3/surf_request/struct.SurfRequest.html\" title=\"struct s3::surf_request::SurfRequest\">SurfRequest</a>&lt;'a&gt;","synthetic":true,"types":["s3::surf_request::SurfRequest"]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()